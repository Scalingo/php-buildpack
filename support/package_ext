#!/usr/bin/env bash

set -e

if [ -n "$DEBUG" ]; then
    set -x
fi

set -o pipefail

if [ $# -lt 3 ]; then
    echo "Usage: $0 ext_name package_ext EXT API..."
    echo "Example: $0 apcu apcu 7.4"
    exit 1
fi

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "$basedir/../conf/buildpack.conf"
source "$basedir/lib/output"
source "$basedir/lib/utils"
source "$basedir/lib/swift"
source "$basedir/lib/php_version"
source "$basedir/lib/php_install"
source "$basedir/lib/php_ext"
export PATH=${basedir}/../vendor/bin:$PATH

package_ext() {
    local ext_name="$1"
    # Package name of the file uploaded on object storage
    # If empty, ext_name is taken
    local ext_package_name="$2"
    local php_series="$3"

    local zend_api_version=$(zend_api_from_php_series "$basedir" "$php_series")
    if [ -z "$zend_api_version" ] ; then
      echo "No compatible zend API found for $php_series"
      return
    fi

    local php_version=$(php_series_last_version "$php_series")
    echo "-----> Building $ext_name for PHP module API version ${zend_api_version} using PHP ${php_version}"

    tempdir=$(mktmpdir "php${ext_name}")
    cd "$tempdir"

    install_php "${php_version}"
    cp "$basedir/ext/${ext_name}" "$tempdir/build.sh"

    package_name="${ext_name}"
    if [ -n "$ext_package_name" ] ; then
      package_name="${ext_package_name}"
    fi

    local tempbuilddir=$(mktmpdir "php-build${ext_name}")
    build_ext "${tempbuilddir}" "${php_version}" "${zend_api_version}" "${ext_name}"
    upload_ext "${tempbuilddir}" "${tempdir}" "${package_name}" "${zend_api_version}"

    rm -r "${tempdir}"
    rm -r "${tempbuilddir}"
}

ext_name="$1"
package_name="$2"
shift
php_api="$@"

if [ ! -f "$basedir/ext/$ext_name" ]; then
    echo "No build manifest found for '$ext_name'" >&2
    exit 1
fi

echo "-----> Building $ext_name for PHP versions [$php_api]"

for api in $php_api; do
    package_ext "$ext_name" "$package_name" "$api"
done
