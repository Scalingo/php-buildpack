#!/usr/bin/env bash
#
# Internal extensions are extensions located in the source tree of PHP
# Directory `ext`, some of them are embedded in the PHP binary, others
# can be added as module as shared library.

set -e

if [ -n "$DEBUG" ]; then
    set -x
fi

set -o pipefail

if [ -z "$1" ]; then
    echo "Usage: package_internal_ext EXT_NAME PHP_VERSIONS..."
    exit 1
fi

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "$basedir/../conf/versions.sh"
source "$basedir/lib/output"
source "$basedir/lib/utils"
source "$basedir/lib/swift"
source "$basedir/lib/php_version"
source "$basedir/lib/php_install"
source "$basedir/lib/php_ext"
export PATH=${basedir}/../vendor/bin:$PATH

package_internal_ext() {
    local ext_name="$1"
    local php_series="$2"

    local zend_api_version=$(zend_api_from_php_series $basedir $php_series)
    if [ -z "$zend_api_version" ] ; then
      echo "No compatible zend API found for $php_series"
      return
    fi

    local php_version=$(php_series_last_version $php_series)
    echo "-----> Building $ext_name for PHP module API version ${zend_api_version} using PHP ${php_version}"

    local tempdir=$(mktmpdir php${ext_name})
    cd $tempdir

    install_php "${php_version}"
    cp "$basedir/ext-internal/${ext_name}" "$tempdir/build.sh"

    # Downloading PHP sources
    local tempsrcdir=$(mktmpdir php-src)
    install_php_src "${php_version}" "${tempsrcdir}"

    local tempbuilddir=$(mktmpdir php-build${ext_name})
    local package_name="${ext_name}"
    build_ext "${tempbuilddir}" "${php_version}" "${zend_api_version}" "${ext_name}" "${tempsrcdir}"
    upload_ext "${tempbuilddir}" "${tempdir}" "${package_name}" "${zend_api_version}"

    rm -r "${tempdir}"
    rm -r "${tempbuilddir}"
    rm -r "${tempsrcdir}"
}

ext_name="$1"
shift
php_api="$@"

if [ ! -f "$basedir/ext-internal/$ext_name" ]; then
    echo "No build manifest found for '$ext_name'" >&2
    exit 1
fi

echo "-----> Building $ext_name for PHP versions [$php_api]"

for api in $php_api; do
    package_internal_ext "$ext_name" "$api"
done
