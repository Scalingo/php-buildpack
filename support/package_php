#!/usr/bin/env bash

set -o errexit

if [ -n "${DEBUG}" ]; then
	set -o xtrace
fi

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "${basedir}/../conf/versions.sh"
source "${basedir}/utils.sh"

export PATH="${PATH:+$PATH:}${basedir}/../vendor/bin"

if [ -z "$1" ]; then
	echo "Usage: $0 <version>" >&2
	exit 1
fi

# PHP vars
php_version="${1}"
php_url="https://php.net/distributions/php-${php_version}.tar.gz"
php_dir="/app/vendor/php"

# zlib vars
zlib_url="${PHP_BASE_URL}/zlib/zlib-${zlib_version}.tar.gz"
zlib_dir="${php_dir}/zlib"

# libonig vars
libonig_url="${PHP_BASE_URL}/package/libonig-${libonig_version}.tgz"
libonig_dir="/app/vendor/libonig"

# libwebp vars
libwebp_url="${PHP_BASE_URL}/package/libwebp-${webp_version}.tgz"
libwebp_dir="/app/vendor/libwebp"

# OpenSSL 1.1.x vars (only for PHP 7.4 stacks > scalingo-20)
# We want to support PHP 7.4 on scalingo-22 and 24, and PHP 7.4 requires
# OpenSSL 1.1.x.
openssl_url="https://www.openssl.org/source/openssl-${pre81_openssl_version}.tar.gz"
openssl_dir="${php_dir}/openssl"

# PHP compilation options
compile_options=(
	--prefix="${php_dir}"
	--enable-bcmath
	--enable-exif
	--enable-fpm
	--enable-gd
	--enable-intl
	--enable-mbstring
	--enable-pcntl
	--enable-shmop
	--enable-soap
	--enable-sockets
	--enable-xmlreader
	--with-bz2
	--with-config-file-path="${php_dir}/etc"
	--with-config-file-scan-dir="${php_dir}/etc/conf.d"
	--with-curl="/usr"
	--with-freetype
	--with-jpeg
	--with-mysqli
	--with-openssl
	--with-password-argon2
	--with-pdo-mysql
	--with-pdo-pgsql="/usr/bin/pg_config"
	--with-pdo-sqlite
	--with-pgsql
	--with-readline
	--with-webp
	--with-xsl
	--with-zip
	--with-zlib="${zlib_dir}"
	--disable-debug
)


# -----------------------------------------------------------------------------


php::pkg::download_extract() {
	local url="${1}"
	local dst_dir="${2}"
	local extract_dir="${3}"

	local archive="$( basename "${url}" )"

	# Download archive
	mkdir --parents "${dst_dir}"
	pushd "${dst_dir}" > /dev/null
	curl --retry 3 --silent --fail \
		--create-dirs \
		--remote-name \
		--location "${url}"
	popd > /dev/null

	# Uncompress
	mkdir --parents "${extract_dir}"
	tar --extract --gzip \
		--directory "${extract_dir}" \
		--file "${dst_dir}/${archive}"
}

php::pkg::zlib::compile() {
	local src_dir="${1}"
	local dst_dir="${2}"

	pushd "${src_dir}" > /dev/null

	./configure \
		--prefix="${dst_dir}" \
		> /dev/null
	make -j 8 > /dev/null
	make install > /dev/null

	popd > /dev/null
}

php::pkg::openssl::compile() {
	local src_dir="${1}"
	local dst_dir="${2}"

	pushd "${src_dir}" > /dev/null

	./config \
		--prefix="${dst_dir}" \
		--openssldir="${dst_dir}" \
		> /dev/null
	make -j 8 > /dev/null
	make install > /dev/null

	popd > /dev/null
}

php::pkg::php::compile() {
	local src_dir="${1}"
	local dst_dir="${2}"
	shift 2

	local opts=("$@")

	pushd "${src_dir}" > /dev/null

	./configure "${opts[@]}" > /dev/null
	make -j 8 > /dev/null
	make install > /dev/null

	popd > /dev/null

	echo "zend_extension=opcache.so" > "${dst_dir}/etc/conf.d/opcache.ini"
}

php::pkg::package() {
	local php_dir="${1}"
	local package="${2}"
	local package_dir="${3}"

	pushd "${php_dir}" > /dev/null

	# Mind the dot at the end of the following line.
	tar --create --gzip --file "${package_dir}/${package}" .

	popd > /dev/null
}


# -----------------------------------------------------------------------------


echo "-----> Packaging PHP ${php_version}"

echo "       Creating directories"
tempdir="$( mktemp -d -t php-XXXX )"
mkdir --parents "${php_dir}/etc/conf.d"
mkdir --parents "${libonig_dir}"
mkdir --parents "${libwebp_dir}"
mkdir --parents "${tempdir}/package"

# We work from $tempdir
pushd "${tempdir}" > /dev/null

echo "       Exporting env vars"
# See http://tldp.org/LDP/abs/html/parameter-substitution.html
export C_INCLUDE_PATH="${C_INCLUDE_PATH:+$C_INCLUDE_PATH:}${libonig_dir}/include"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH:+$PKG_CONFIG_PATH:}${libonig_dir}/lib/pkgconfig"
export WEBP_LIBS="-L${libwebp_dir}/lib -lwebp"
export WEBP_CFLAGS="-I${libwebp_dir}/include"


# --- START PHP 7.4 support

if [[ "${php_version}" == 7.4.* ]]; then
	if [[ "${STACK}" == "scalingo-22" || "${STACK}" == "scalingo-24" ]]; then
		echo "-----> Legacy setup detected!"
		echo "-----> Compiling OpenSSL ${pre81_openssl_version}"

		php::pkg::download_extract "${openssl_url}" "${tempdir}" "${tempdir}"
		php::pkg::openssl::compile \
			"${tempdir}/openssl-${pre81_openssl_version}" \
			"${openssl_dir}"

		# Export updated PKG_CONFIG_PATH for later:
		export PKG_CONFIG_PATH="${PKG_CONFIG_PATH:+$PKG_CONFIG_PATH:}${openssl_dir}/lib/pkgconfig"

		# Adjust compile options:
		compile_options+=( --with-openssl-dir="${openssl_dir}" )
	fi
	# else we most probably are in scalingo-20, which still ships an
	# appropriate version of OpenSSL.
fi

# --- END PHP 7.4 support


echo "-----> Downloading libonig ${libonig_version}"
php::pkg::download_extract "${libonig_url}" "${tempdir}" "${libonig_dir}"

echo "-----> Downloading libwebp ${webp_version}"
php::pkg::download_extract "${libwebp_url}" "${tempdir}" "${libwebp_dir}"

echo "-----> Compiling zlib ${zlib_version}"
php::pkg::download_extract "${zlib_url}" "${tempdir}" "${tempdir}"
php::pkg::zlib::compile "${tempdir}/zlib-${zlib_version}" "${zlib_dir}"

echo "-----> Compiling PHP"
php::pkg::download_extract "${php_url}" "${tempdir}" "${tempdir}"
php::pkg::php::compile "${tempdir}/php-${php_version}" "${php_dir}" \
	"${compile_options[@]}"

echo "-----> Packaging"
php::pkg::package "${php_dir}" "php-${php_version}.tgz" "${tempdir}/package"

echo "-----> Uploading package"
php::pkg::swift_upload "${SWIFT_BUCKET}" "package/php-${php_version}.tgz" \
	> /dev/null

echo "       Building manifest"
php::pkg::build_manifest "${SWIFT_BUCKET}"

echo "       Building checksum"
php::pkg::checksum "${SWIFT_BUCKET}" "package/php-${php_version}"

echo "-----> Done building PHP package!"
